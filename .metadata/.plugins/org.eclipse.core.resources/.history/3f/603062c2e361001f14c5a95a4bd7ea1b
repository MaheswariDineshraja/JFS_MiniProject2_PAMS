package org.user.app.controller;

import java.util.List;
import org.user.app.model.Appointments;
import org.user.app.service.DiseaseService;
import org.user.app.service.DoctorService;
import org.user.app.service.AppointmentService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import jakarta.persistence.EntityManager;


@Controller
@RequestMapping("/appointments")
public class AppointmentController
{

    // load employee data
    private AppointmentService appointmentService;
//    private DoctorService doctorService;
//    private DiseaseService diseaseService;
    private List<Appointments> theAppointments;
    @Autowired
    private EntityManager em;

    public AppointmentController(AppointmentService appointmentService)
    {
        this.appointmentService = appointmentService;
//        this.doctorService = doctorService;
//        this.diseaseService = diseaseService;
    }

    @GetMapping("/list")
    public String listEmployees(Model theModel)
    {
    	theAppointments = appointmentService.getAllPatients();
        theModel.addAttribute("patients", theAppointments);
        return "patients/list-patients";
    }

    @GetMapping("/addAppointment")
    public String getPatientForm(Model model)
    {
    	Appointments patient = new Appointments();
        //model.addAttribute("doctorList",doctorService.getAllDoctors());
        model.addAttribute("appointments",patient);
        return "patients/addPatient";
    }

    @PostMapping("/save")
    public String savePatient(@ModelAttribute("patient") Appointments thePatient)
    {

        patientService.save(thePatient);
        return "redirect:/patients/list";
    }

    @GetMapping("/showFormForUpdate")
    public String showUpdateForm(@RequestParam("patientId") int theID,Model model)
    {
        Patient patient = patientService.findById(theID);
        model.addAttribute("doctorList",doctorService.getAllDoctors());
        model.addAttribute("patient",patient);
        return "patients/addPatient";
    }

    @GetMapping("/delete")
    public String deletePatient(@RequestParam("patientId") int theID)
    {
        patientService.deleteById(theID);
        return "redirect:/patients/list";
    }

}
